apply plugin: 'com.android.application'
apply plugin: 'com.github.triplet.play'
apply plugin: 'com.neenbedankt.android-apt'

def computeVersionCode() {
    Integer buildNumber = System.getenv("BUILD_NUMBER") as Integer ?: 0
    Integer buildNumberBuffer = System.getenv("BUILD_NUMBER_BUFFER") as Integer ?: 0

    return buildNumber + buildNumberBuffer
}

android {
    compileSdkVersion 23
    buildToolsVersion "21.1.2"
    defaultConfig {
        applicationId "clowdtech.pos.mpositive"
        testApplicationId "clowdtech.pos.mpositive.test"
        minSdkVersion 14
        targetSdkVersion 23
        versionName "1.2"
        versionCode computeVersionCode()
        project.ext.set("archivesBaseName", "MPOSitive")
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    final String store = System.getenv("MPOS_STORE");
    if (store != null) {
        signingConfigs {
            releaseSigning {
                storeFile file(System.getenv("MPOS_STORE"))
                storePassword System.getenv("MPOS_STORE_PASSWORD")
                keyAlias System.getenv("MPOS_KEY")
                keyPassword System.getenv("MPOS_KEY_PASSWORD")
            }
        }

        buildTypes {
            release {
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
                signingConfig signingConfigs.releaseSigning
            }
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.outputFile = new File(
                    output.outputFile.parent,
                    output.outputFile.name.replace(".apk", "-${variant.versionName}-${variant.versionCode}.apk"))
        }
    }

    productFlavors {
    }

    lintOptions { // lint.xml did not work for ignoring ../../libs/*
        disable 'InvalidPackage'
    }

    // circleci deployment to google play store
    final String playAccount = System.getenv("PLAY_STORE_ACCOUNT");
    if (playAccount != null) {
        play {
            serviceAccountEmail = playAccount
            pk12File = file('MPOSitive-c25afd5b49bf.p12')
            track = 'beta'
        }
    }
}

dependencies {
    //    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:support-v4:23.1.1'
    compile 'com.android.support:recyclerview-v7:23.1.1'
    compile 'com.android.support:cardview-v7:23.1.1'
    compile 'com.google.android.gms:play-services:7.0.0'
    compile 'com.netflix.rxjava:rxjava-core:0.20.3'
    compile 'com.netflix.rxjava:rxjava-android:0.20.3'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.1.0'
    compile 'com.squareup.okhttp:okhttp:2.1.0'
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile 'com.google.dagger:dagger:2.0'
    apt 'com.google.dagger:dagger-compiler:2.0'
    provided 'org.glassfish:javax.annotation:10.0-b28'
    compile 'com.jakewharton:butterknife:7.0.1'
    compile project(':clowdtech.data')
    compile project(':clowdtech.printer')
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile 'com.squareup:otto:1.3.8'

    // Unit testing dependencies
    testCompile 'junit:junit:4.12'
    testCompile "org.robolectric:robolectric:3.0"
    testCompile 'org.mockito:mockito-core:1.10.19'
}
